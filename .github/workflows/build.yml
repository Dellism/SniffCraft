name: Build

on: 
  push:
    branches:
      - master
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - 'LICENSE'

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - {
            name: "Windows",
            os: windows-latest,
            generator: "Visual Studio 17 2022",
            target: "ALL_BUILD"
          }
        - {
            name: "Linux",
            os: ubuntu-latest,
            generator: "Unix Makefiles",
            target: "all"
          }

    outputs:
      Windows: ${{ steps.update-output.outputs.Windows }}
      Linux: ${{ steps.update-output.outputs.Linux }}

    steps:
      - uses: actions/checkout@v3

      - name: Create build folder
        run: cmake -E make_directory ${{ runner.workspace }}/build

      - name: Configure cmake
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: cmake -G "${{ matrix.config.generator }}" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DGAME_VERSION=latest -DSNIFFCRAFT_WITH_ENCRYPTION=ON -DSNIFFCRAFT_FORCE_LOCAL_ZLIB=ON -DSNIFFCRAFT_FORCE_LOCAL_OPENSSL=ON -S $GITHUB_WORKSPACE -B .

      - name: Build
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: cmake --build . --config $BUILD_TYPE --parallel 2 --target ${{ matrix.config.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: sniffcraft-${{ matrix.config.name }}
          path: ${{ github.workspace }}/bin/sniffcraft*
          retention-days: 1

      - name: Retrieve MC game version
        id: mc-version
        uses: juliangruber/read-file-action@v1
        with:
          path:
            ${{ runner.workspace }}/build/version.txt

      - name: Set output version
        id: update-output
        run: echo "::set-output name=${{ matrix.config.name }}::${{ steps.mc-version.outputs.content }}"

  update_latest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Remove old latest release
        uses: cb80/delrel@latest
        with:
          tag: latest

      - name: Update latest tag
        uses: richardsimko/update-tag@v1
        with:
          tag_name: latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new latest release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            Automatically generated binaries with the latest version of the code for Minecraft ${{ needs.build.outputs.Windows }}.
            
            Examples of conf files can be found [here](https://github.com/adepierre/SniffCraft/tree/master/conf).
          draft: false
          prerelease: false
          name: Latest
          tag_name: latest
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: sniffcraft-Linux
          path: linux

      - name: Upload Linux file to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: linux/sniffcraft
          asset_name: sniffcraft-linux-${{ needs.build.outputs.Linux }}
          tag: latest

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: sniffcraft-Windows
          path: windows

      - name: Upload Windows file to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: windows/sniffcraft.exe
          asset_name: sniffcraft-windows-${{ needs.build.outputs.Linux }}.exe
          tag: latest
